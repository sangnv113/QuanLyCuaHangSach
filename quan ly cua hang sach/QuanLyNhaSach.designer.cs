#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace quan_ly_cua_hang_sach
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CuaHangSach2")]
	public partial class QuanLyNhaSachDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTHELOAI(THELOAI instance);
    partial void UpdateTHELOAI(THELOAI instance);
    partial void DeleteTHELOAI(THELOAI instance);
    partial void InsertTaiKhoanTruyCap(TaiKhoanTruyCap instance);
    partial void UpdateTaiKhoanTruyCap(TaiKhoanTruyCap instance);
    partial void DeleteTaiKhoanTruyCap(TaiKhoanTruyCap instance);
    partial void InsertSachMuaVao(SachMuaVao instance);
    partial void UpdateSachMuaVao(SachMuaVao instance);
    partial void DeleteSachMuaVao(SachMuaVao instance);
    partial void InsertSachBanRa(SachBanRa instance);
    partial void UpdateSachBanRa(SachBanRa instance);
    partial void DeleteSachBanRa(SachBanRa instance);
    partial void InsertSach(Sach instance);
    partial void UpdateSach(Sach instance);
    partial void DeleteSach(Sach instance);
    partial void InsertNXB(NXB instance);
    partial void UpdateNXB(NXB instance);
    partial void DeleteNXB(NXB instance);
    partial void InsertNHACC(NHACC instance);
    partial void UpdateNHACC(NHACC instance);
    partial void DeleteNHACC(NHACC instance);
    partial void InsertNGONNGU(NGONNGU instance);
    partial void UpdateNGONNGU(NGONNGU instance);
    partial void DeleteNGONNGU(NGONNGU instance);
    partial void InsertKeSach(KeSach instance);
    partial void UpdateKeSach(KeSach instance);
    partial void DeleteKeSach(KeSach instance);
    partial void InsertHoaDonNhap(HoaDonNhap instance);
    partial void UpdateHoaDonNhap(HoaDonNhap instance);
    partial void DeleteHoaDonNhap(HoaDonNhap instance);
    partial void InsertHoaDonBan(HoaDonBan instance);
    partial void UpdateHoaDonBan(HoaDonBan instance);
    partial void DeleteHoaDonBan(HoaDonBan instance);
    partial void InsertGIANIEMYET(GIANIEMYET instance);
    partial void UpdateGIANIEMYET(GIANIEMYET instance);
    partial void DeleteGIANIEMYET(GIANIEMYET instance);
    #endregion
		
		public QuanLyNhaSachDataContext() : 
				base(global::quan_ly_cua_hang_sach.Properties.Settings.Default.CuaHangSach2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNhaSachDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNhaSachDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNhaSachDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNhaSachDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<THELOAI> THELOAIs
		{
			get
			{
				return this.GetTable<THELOAI>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoanTruyCap> TaiKhoanTruyCaps
		{
			get
			{
				return this.GetTable<TaiKhoanTruyCap>();
			}
		}
		
		public System.Data.Linq.Table<SachMuaVao> SachMuaVaos
		{
			get
			{
				return this.GetTable<SachMuaVao>();
			}
		}
		
		public System.Data.Linq.Table<SachBanRa> SachBanRas
		{
			get
			{
				return this.GetTable<SachBanRa>();
			}
		}
		
		public System.Data.Linq.Table<Sach> Saches
		{
			get
			{
				return this.GetTable<Sach>();
			}
		}
		
		public System.Data.Linq.Table<NXB> NXBs
		{
			get
			{
				return this.GetTable<NXB>();
			}
		}
		
		public System.Data.Linq.Table<NHACC> NHACCs
		{
			get
			{
				return this.GetTable<NHACC>();
			}
		}
		
		public System.Data.Linq.Table<NGONNGU> NGONNGUs
		{
			get
			{
				return this.GetTable<NGONNGU>();
			}
		}
		
		public System.Data.Linq.Table<KeSach> KeSaches
		{
			get
			{
				return this.GetTable<KeSach>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this.GetTable<HoaDonNhap>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonBan> HoaDonBans
		{
			get
			{
				return this.GetTable<HoaDonBan>();
			}
		}
		
		public System.Data.Linq.Table<GIANIEMYET> GIANIEMYETs
		{
			get
			{
				return this.GetTable<GIANIEMYET>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THELOAI")]
	public partial class THELOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTheLoai;
		
		private string _TheLoai1;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheLoaiChanging(string value);
    partial void OnMaTheLoaiChanged();
    partial void OnTheLoai1Changing(string value);
    partial void OnTheLoai1Changed();
    #endregion
		
		public THELOAI()
		{
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheLoai1", DbType="NVarChar(50)")]
		public string TheLoai1
		{
			get
			{
				return this._TheLoai1;
			}
			set
			{
				if ((this._TheLoai1 != value))
				{
					this.OnTheLoai1Changing(value);
					this.SendPropertyChanging();
					this._TheLoai1 = value;
					this.SendPropertyChanged("TheLoai1");
					this.OnTheLoai1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_Sach", Storage="_Saches", ThisKey="MaTheLoai", OtherKey="TheLoai")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI1 = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoanTruyCap")]
	public partial class TaiKhoanTruyCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTaiKhoan;
		
		private string _MatKhau;
		
		private string _QuyenTruyCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuyenTruyCapChanging(string value);
    partial void OnQuyenTruyCapChanged();
    #endregion
		
		public TaiKhoanTruyCap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NChar(10)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuyenTruyCap", DbType="NVarChar(50)")]
		public string QuyenTruyCap
		{
			get
			{
				return this._QuyenTruyCap;
			}
			set
			{
				if ((this._QuyenTruyCap != value))
				{
					this.OnQuyenTruyCapChanging(value);
					this.SendPropertyChanging();
					this._QuyenTruyCap = value;
					this.SendPropertyChanged("QuyenTruyCap");
					this.OnQuyenTruyCapChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SachMuaVao")]
	public partial class SachMuaVao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHoaDonMua;
		
		private string _MaSach;
		
		private System.Nullable<int> _GiaTien;
		
		private System.Nullable<int> _Soluong;
		
		private EntityRef<Sach> _Sach;
		
		private EntityRef<HoaDonNhap> _HoaDonNhap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonMuaChanging(string value);
    partial void OnMaHoaDonMuaChanged();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnGiaTienChanging(System.Nullable<int> value);
    partial void OnGiaTienChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    #endregion
		
		public SachMuaVao()
		{
			this._Sach = default(EntityRef<Sach>);
			this._HoaDonNhap = default(EntityRef<HoaDonNhap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDonMua", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoaDonMua
		{
			get
			{
				return this._MaHoaDonMua;
			}
			set
			{
				if ((this._MaHoaDonMua != value))
				{
					if (this._HoaDonNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonMuaChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDonMua = value;
					this.SendPropertyChanged("MaHoaDonMua");
					this.OnMaHoaDonMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Int")]
		public System.Nullable<int> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_SachMuaVao", Storage="_Sach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true)]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.SachMuaVaos.Remove(this);
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.SachMuaVaos.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(string);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_SachMuaVao", Storage="_HoaDonNhap", ThisKey="MaHoaDonMua", OtherKey="MaHoaDonNhap", IsForeignKey=true)]
		public HoaDonNhap HoaDonNhap
		{
			get
			{
				return this._HoaDonNhap.Entity;
			}
			set
			{
				HoaDonNhap previousValue = this._HoaDonNhap.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonNhap.Entity = null;
						previousValue.SachMuaVaos.Remove(this);
					}
					this._HoaDonNhap.Entity = value;
					if ((value != null))
					{
						value.SachMuaVaos.Add(this);
						this._MaHoaDonMua = value.MaHoaDonNhap;
					}
					else
					{
						this._MaHoaDonMua = default(string);
					}
					this.SendPropertyChanged("HoaDonNhap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SachBanRa")]
	public partial class SachBanRa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHoaDonBan;
		
		private string _MaSach;
		
		private System.Nullable<int> _GiaTien;
		
		private System.Nullable<int> _Soluong;
		
		private EntityRef<Sach> _Sach;
		
		private EntityRef<HoaDonBan> _HoaDonBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonBanChanging(string value);
    partial void OnMaHoaDonBanChanged();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnGiaTienChanging(System.Nullable<int> value);
    partial void OnGiaTienChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    #endregion
		
		public SachBanRa()
		{
			this._Sach = default(EntityRef<Sach>);
			this._HoaDonBan = default(EntityRef<HoaDonBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDonBan", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoaDonBan
		{
			get
			{
				return this._MaHoaDonBan;
			}
			set
			{
				if ((this._MaHoaDonBan != value))
				{
					if (this._HoaDonBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonBanChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDonBan = value;
					this.SendPropertyChanged("MaHoaDonBan");
					this.OnMaHoaDonBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Int")]
		public System.Nullable<int> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_SachBanRa", Storage="_Sach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true)]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.SachBanRas.Remove(this);
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.SachBanRas.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(string);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBan_SachBanRa", Storage="_HoaDonBan", ThisKey="MaHoaDonBan", OtherKey="MaHoaDonBan", IsForeignKey=true)]
		public HoaDonBan HoaDonBan
		{
			get
			{
				return this._HoaDonBan.Entity;
			}
			set
			{
				HoaDonBan previousValue = this._HoaDonBan.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonBan.Entity = null;
						previousValue.SachBanRas.Remove(this);
					}
					this._HoaDonBan.Entity = value;
					if ((value != null))
					{
						value.SachBanRas.Add(this);
						this._MaHoaDonBan = value.MaHoaDonBan;
					}
					else
					{
						this._MaHoaDonBan = default(string);
					}
					this.SendPropertyChanged("HoaDonBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sach")]
	public partial class Sach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSach;
		
		private string _TenSach;
		
		private string _TacGia;
		
		private string _NhaXuatBan;
		
		private System.Nullable<int> _SoTrang;
		
		private string _NgonNgu;
		
		private string _TheLoai;
		
		private string _TinhTrang;
		
		private string _ViTri;
		
		private EntitySet<SachMuaVao> _SachMuaVaos;
		
		private EntitySet<SachBanRa> _SachBanRas;
		
		private EntityRef<GIANIEMYET> _GIANIEMYET;
		
		private EntityRef<THELOAI> _THELOAI1;
		
		private EntityRef<NXB> _NXB;
		
		private EntityRef<NGONNGU> _NGONNGU1;
		
		private EntityRef<KeSach> _KeSach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnTenSachChanging(string value);
    partial void OnTenSachChanged();
    partial void OnTacGiaChanging(string value);
    partial void OnTacGiaChanged();
    partial void OnNhaXuatBanChanging(string value);
    partial void OnNhaXuatBanChanged();
    partial void OnSoTrangChanging(System.Nullable<int> value);
    partial void OnSoTrangChanged();
    partial void OnNgonNguChanging(string value);
    partial void OnNgonNguChanged();
    partial void OnTheLoaiChanging(string value);
    partial void OnTheLoaiChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnViTriChanging(string value);
    partial void OnViTriChanged();
    #endregion
		
		public Sach()
		{
			this._SachMuaVaos = new EntitySet<SachMuaVao>(new Action<SachMuaVao>(this.attach_SachMuaVaos), new Action<SachMuaVao>(this.detach_SachMuaVaos));
			this._SachBanRas = new EntitySet<SachBanRa>(new Action<SachBanRa>(this.attach_SachBanRas), new Action<SachBanRa>(this.detach_SachBanRas));
			this._GIANIEMYET = default(EntityRef<GIANIEMYET>);
			this._THELOAI1 = default(EntityRef<THELOAI>);
			this._NXB = default(EntityRef<NXB>);
			this._NGONNGU1 = default(EntityRef<NGONNGU>);
			this._KeSach = default(EntityRef<KeSach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSach", DbType="NVarChar(50)")]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this.OnTenSachChanging(value);
					this.SendPropertyChanging();
					this._TenSach = value;
					this.SendPropertyChanged("TenSach");
					this.OnTenSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TacGia", DbType="NVarChar(50)")]
		public string TacGia
		{
			get
			{
				return this._TacGia;
			}
			set
			{
				if ((this._TacGia != value))
				{
					this.OnTacGiaChanging(value);
					this.SendPropertyChanging();
					this._TacGia = value;
					this.SendPropertyChanged("TacGia");
					this.OnTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaXuatBan", DbType="NChar(10)")]
		public string NhaXuatBan
		{
			get
			{
				return this._NhaXuatBan;
			}
			set
			{
				if ((this._NhaXuatBan != value))
				{
					if (this._NXB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhaXuatBanChanging(value);
					this.SendPropertyChanging();
					this._NhaXuatBan = value;
					this.SendPropertyChanged("NhaXuatBan");
					this.OnNhaXuatBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTrang", DbType="Int")]
		public System.Nullable<int> SoTrang
		{
			get
			{
				return this._SoTrang;
			}
			set
			{
				if ((this._SoTrang != value))
				{
					this.OnSoTrangChanging(value);
					this.SendPropertyChanging();
					this._SoTrang = value;
					this.SendPropertyChanged("SoTrang");
					this.OnSoTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgonNgu", DbType="NChar(10)")]
		public string NgonNgu
		{
			get
			{
				return this._NgonNgu;
			}
			set
			{
				if ((this._NgonNgu != value))
				{
					if (this._NGONNGU1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNgonNguChanging(value);
					this.SendPropertyChanging();
					this._NgonNgu = value;
					this.SendPropertyChanged("NgonNgu");
					this.OnNgonNguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheLoai", DbType="NChar(10)")]
		public string TheLoai
		{
			get
			{
				return this._TheLoai;
			}
			set
			{
				if ((this._TheLoai != value))
				{
					if (this._THELOAI1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TheLoai = value;
					this.SendPropertyChanged("TheLoai");
					this.OnTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTri", DbType="NChar(10)")]
		public string ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					if (this._KeSach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_SachMuaVao", Storage="_SachMuaVaos", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<SachMuaVao> SachMuaVaos
		{
			get
			{
				return this._SachMuaVaos;
			}
			set
			{
				this._SachMuaVaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_SachBanRa", Storage="_SachBanRas", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<SachBanRa> SachBanRas
		{
			get
			{
				return this._SachBanRas;
			}
			set
			{
				this._SachBanRas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_GIANIEMYET", Storage="_GIANIEMYET", ThisKey="MaSach", OtherKey="MaSach", IsUnique=true, IsForeignKey=false)]
		public GIANIEMYET GIANIEMYET
		{
			get
			{
				return this._GIANIEMYET.Entity;
			}
			set
			{
				GIANIEMYET previousValue = this._GIANIEMYET.Entity;
				if (((previousValue != value) 
							|| (this._GIANIEMYET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANIEMYET.Entity = null;
						previousValue.Sach = null;
					}
					this._GIANIEMYET.Entity = value;
					if ((value != null))
					{
						value.Sach = this;
					}
					this.SendPropertyChanged("GIANIEMYET");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_Sach", Storage="_THELOAI1", ThisKey="TheLoai", OtherKey="MaTheLoai", IsForeignKey=true)]
		public THELOAI THELOAI1
		{
			get
			{
				return this._THELOAI1.Entity;
			}
			set
			{
				THELOAI previousValue = this._THELOAI1.Entity;
				if (((previousValue != value) 
							|| (this._THELOAI1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THELOAI1.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._THELOAI1.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._TheLoai = value.MaTheLoai;
					}
					else
					{
						this._TheLoai = default(string);
					}
					this.SendPropertyChanged("THELOAI1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NXB_Sach", Storage="_NXB", ThisKey="NhaXuatBan", OtherKey="MaNXB", IsForeignKey=true)]
		public NXB NXB
		{
			get
			{
				return this._NXB.Entity;
			}
			set
			{
				NXB previousValue = this._NXB.Entity;
				if (((previousValue != value) 
							|| (this._NXB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NXB.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._NXB.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._NhaXuatBan = value.MaNXB;
					}
					else
					{
						this._NhaXuatBan = default(string);
					}
					this.SendPropertyChanged("NXB");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGONNGU_Sach", Storage="_NGONNGU1", ThisKey="NgonNgu", OtherKey="MaNgonNgu", IsForeignKey=true)]
		public NGONNGU NGONNGU1
		{
			get
			{
				return this._NGONNGU1.Entity;
			}
			set
			{
				NGONNGU previousValue = this._NGONNGU1.Entity;
				if (((previousValue != value) 
							|| (this._NGONNGU1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGONNGU1.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._NGONNGU1.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._NgonNgu = value.MaNgonNgu;
					}
					else
					{
						this._NgonNgu = default(string);
					}
					this.SendPropertyChanged("NGONNGU1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KeSach_Sach", Storage="_KeSach", ThisKey="ViTri", OtherKey="TenKeSach", IsForeignKey=true)]
		public KeSach KeSach
		{
			get
			{
				return this._KeSach.Entity;
			}
			set
			{
				KeSach previousValue = this._KeSach.Entity;
				if (((previousValue != value) 
							|| (this._KeSach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KeSach.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._KeSach.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._ViTri = value.TenKeSach;
					}
					else
					{
						this._ViTri = default(string);
					}
					this.SendPropertyChanged("KeSach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SachMuaVaos(SachMuaVao entity)
		{
			this.SendPropertyChanging();
			entity.Sach = this;
		}
		
		private void detach_SachMuaVaos(SachMuaVao entity)
		{
			this.SendPropertyChanging();
			entity.Sach = null;
		}
		
		private void attach_SachBanRas(SachBanRa entity)
		{
			this.SendPropertyChanging();
			entity.Sach = this;
		}
		
		private void detach_SachBanRas(SachBanRa entity)
		{
			this.SendPropertyChanging();
			entity.Sach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NXB")]
	public partial class NXB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNXB;
		
		private string _TenNXB;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNXBChanging(string value);
    partial void OnMaNXBChanged();
    partial void OnTenNXBChanging(string value);
    partial void OnTenNXBChanged();
    #endregion
		
		public NXB()
		{
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNXB", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNXB
		{
			get
			{
				return this._MaNXB;
			}
			set
			{
				if ((this._MaNXB != value))
				{
					this.OnMaNXBChanging(value);
					this.SendPropertyChanging();
					this._MaNXB = value;
					this.SendPropertyChanged("MaNXB");
					this.OnMaNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNXB", DbType="NVarChar(50)")]
		public string TenNXB
		{
			get
			{
				return this._TenNXB;
			}
			set
			{
				if ((this._TenNXB != value))
				{
					this.OnTenNXBChanging(value);
					this.SendPropertyChanging();
					this._TenNXB = value;
					this.SendPropertyChanged("TenNXB");
					this.OnTenNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NXB_Sach", Storage="_Saches", ThisKey="MaNXB", OtherKey="NhaXuatBan")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.NXB = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.NXB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACC")]
	public partial class NHACC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _NhaCC1;
		
		private EntitySet<HoaDonNhap> _HoaDonNhaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnNhaCC1Changing(string value);
    partial void OnNhaCC1Changed();
    #endregion
		
		public NHACC()
		{
			this._HoaDonNhaps = new EntitySet<HoaDonNhap>(new Action<HoaDonNhap>(this.attach_HoaDonNhaps), new Action<HoaDonNhap>(this.detach_HoaDonNhaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaCC1", DbType="NVarChar(50)")]
		public string NhaCC1
		{
			get
			{
				return this._NhaCC1;
			}
			set
			{
				if ((this._NhaCC1 != value))
				{
					this.OnNhaCC1Changing(value);
					this.SendPropertyChanging();
					this._NhaCC1 = value;
					this.SendPropertyChanged("NhaCC1");
					this.OnNhaCC1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACC_HoaDonNhap", Storage="_HoaDonNhaps", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this._HoaDonNhaps;
			}
			set
			{
				this._HoaDonNhaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NHACC = this;
		}
		
		private void detach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NHACC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGONNGU")]
	public partial class NGONNGU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNgonNgu;
		
		private string _NgonNgu1;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNgonNguChanging(string value);
    partial void OnMaNgonNguChanged();
    partial void OnNgonNgu1Changing(string value);
    partial void OnNgonNgu1Changed();
    #endregion
		
		public NGONNGU()
		{
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNgonNgu", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNgonNgu
		{
			get
			{
				return this._MaNgonNgu;
			}
			set
			{
				if ((this._MaNgonNgu != value))
				{
					this.OnMaNgonNguChanging(value);
					this.SendPropertyChanging();
					this._MaNgonNgu = value;
					this.SendPropertyChanged("MaNgonNgu");
					this.OnMaNgonNguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgonNgu1", DbType="NVarChar(50)")]
		public string NgonNgu1
		{
			get
			{
				return this._NgonNgu1;
			}
			set
			{
				if ((this._NgonNgu1 != value))
				{
					this.OnNgonNgu1Changing(value);
					this.SendPropertyChanging();
					this._NgonNgu1 = value;
					this.SendPropertyChanged("NgonNgu1");
					this.OnNgonNgu1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGONNGU_Sach", Storage="_Saches", ThisKey="MaNgonNgu", OtherKey="NgonNgu")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.NGONNGU1 = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.NGONNGU1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KeSach")]
	public partial class KeSach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenKeSach;
		
		private string _TheLoai;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenKeSachChanging(string value);
    partial void OnTenKeSachChanged();
    partial void OnTheLoaiChanging(string value);
    partial void OnTheLoaiChanged();
    #endregion
		
		public KeSach()
		{
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKeSach", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenKeSach
		{
			get
			{
				return this._TenKeSach;
			}
			set
			{
				if ((this._TenKeSach != value))
				{
					this.OnTenKeSachChanging(value);
					this.SendPropertyChanging();
					this._TenKeSach = value;
					this.SendPropertyChanged("TenKeSach");
					this.OnTenKeSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheLoai", DbType="NVarChar(50)")]
		public string TheLoai
		{
			get
			{
				return this._TheLoai;
			}
			set
			{
				if ((this._TheLoai != value))
				{
					this.OnTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TheLoai = value;
					this.SendPropertyChanged("TheLoai");
					this.OnTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KeSach_Sach", Storage="_Saches", ThisKey="TenKeSach", OtherKey="ViTri")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.KeSach = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.KeSach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonNhap")]
	public partial class HoaDonNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHoaDonNhap;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private string _MaNCC;
		
		private EntitySet<SachMuaVao> _SachMuaVaos;
		
		private EntityRef<NHACC> _NHACC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonNhapChanging(string value);
    partial void OnMaHoaDonNhapChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    #endregion
		
		public HoaDonNhap()
		{
			this._SachMuaVaos = new EntitySet<SachMuaVao>(new Action<SachMuaVao>(this.attach_SachMuaVaos), new Action<SachMuaVao>(this.detach_SachMuaVaos));
			this._NHACC = default(EntityRef<NHACC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDonNhap", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoaDonNhap
		{
			get
			{
				return this._MaHoaDonNhap;
			}
			set
			{
				if ((this._MaHoaDonNhap != value))
				{
					this.OnMaHoaDonNhapChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDonNhap = value;
					this.SendPropertyChanged("MaHoaDonNhap");
					this.OnMaHoaDonNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="NChar(10)")]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._NHACC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_SachMuaVao", Storage="_SachMuaVaos", ThisKey="MaHoaDonNhap", OtherKey="MaHoaDonMua")]
		public EntitySet<SachMuaVao> SachMuaVaos
		{
			get
			{
				return this._SachMuaVaos;
			}
			set
			{
				this._SachMuaVaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACC_HoaDonNhap", Storage="_NHACC", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NHACC NHACC
		{
			get
			{
				return this._NHACC.Entity;
			}
			set
			{
				NHACC previousValue = this._NHACC.Entity;
				if (((previousValue != value) 
							|| (this._NHACC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACC.Entity = null;
						previousValue.HoaDonNhaps.Remove(this);
					}
					this._NHACC.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhaps.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NHACC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SachMuaVaos(SachMuaVao entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = this;
		}
		
		private void detach_SachMuaVaos(SachMuaVao entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonBan")]
	public partial class HoaDonBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHoaDonBan;
		
		private System.Nullable<System.DateTime> _NgayBan;
		
		private EntitySet<SachBanRa> _SachBanRas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonBanChanging(string value);
    partial void OnMaHoaDonBanChanged();
    partial void OnNgayBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBanChanged();
    #endregion
		
		public HoaDonBan()
		{
			this._SachBanRas = new EntitySet<SachBanRa>(new Action<SachBanRa>(this.attach_SachBanRas), new Action<SachBanRa>(this.detach_SachBanRas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDonBan", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoaDonBan
		{
			get
			{
				return this._MaHoaDonBan;
			}
			set
			{
				if ((this._MaHoaDonBan != value))
				{
					this.OnMaHoaDonBanChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDonBan = value;
					this.SendPropertyChanged("MaHoaDonBan");
					this.OnMaHoaDonBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBan
		{
			get
			{
				return this._NgayBan;
			}
			set
			{
				if ((this._NgayBan != value))
				{
					this.OnNgayBanChanging(value);
					this.SendPropertyChanging();
					this._NgayBan = value;
					this.SendPropertyChanged("NgayBan");
					this.OnNgayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBan_SachBanRa", Storage="_SachBanRas", ThisKey="MaHoaDonBan", OtherKey="MaHoaDonBan")]
		public EntitySet<SachBanRa> SachBanRas
		{
			get
			{
				return this._SachBanRas;
			}
			set
			{
				this._SachBanRas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SachBanRas(SachBanRa entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBan = this;
		}
		
		private void detach_SachBanRas(SachBanRa entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANIEMYET")]
	public partial class GIANIEMYET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSach;
		
		private System.Nullable<int> _GiaTien;
		
		private EntityRef<Sach> _Sach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnGiaTienChanging(System.Nullable<int> value);
    partial void OnGiaTienChanged();
    #endregion
		
		public GIANIEMYET()
		{
			this._Sach = default(EntityRef<Sach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Int")]
		public System.Nullable<int> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_GIANIEMYET", Storage="_Sach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true)]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.GIANIEMYET = null;
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.GIANIEMYET = this;
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(string);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
